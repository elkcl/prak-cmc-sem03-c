execve("build/fdtest", ["build/fdtest"], 0x7fe4db5730 /* 41 vars */) = 0
getpid()                                = 5898
mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf388000
set_tid_address(0x7ecf4c7510)           = 5898
faccessat(AT_FDCWD, "/dev/urandom", R_OK) = 0
getrandom("\xc1\x90\xe6\x22\xe6\xe6\x5e\xe1\x6d\x35\x0e\x77\x7b\x36\x93\x62\x54\x9a\x4e\xc5\xd5\xd1\x3f\xe8\x49\xef\x7b\xfd\x77\xe0\x31\xe6"..., 40, GRND_NONBLOCK) = 40
mmap(NULL, 1104, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf387000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf387000, 1104, "arc4random data") = 0
sched_getscheduler(0)                   = 0 (SCHED_OTHER)
mmap(NULL, 36864, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf37e000
mprotect(0x7ecf37e000, 4096, PROT_NONE) = 0
sigaltstack({ss_sp=0x7ecf37f000, ss_flags=0, ss_size=32768}, NULL) = 0
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf37f000, 32768, "thread signal stack") = 0
mmap(NULL, 16777216, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece37e000
mprotect(0x7ece448000, 8192, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf4b3000, 32768, PROT_READ) = 0
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf4bd000, 49152, ".bss") = 0
mprotect(0x7ecf4c6000, 4096, PROT_READ) = 0
mprotect(0x7ecf4c6000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf4c6000, 4096, PROT_READ) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece37d000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece37d000, 4096, "atexit handlers") = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece37c000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece37c000, 4096, "bionic_alloc_small_objects") = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece37b000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece37b000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece37a000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece37a000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 409600, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece316000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece316000, 409600, "linker_alloc") = 0
mprotect(0x7ece316000, 409600, PROT_READ|PROT_WRITE) = 0
fcntl(0, F_GETFL)                       = 0x20002 (flags O_RDWR|O_LARGEFILE)
fcntl(1, F_GETFL)                       = 0x20001 (flags O_WRONLY|O_LARGEFILE)
fcntl(2, F_GETFL)                       = 0x20001 (flags O_WRONLY|O_LARGEFILE)
newfstatat(AT_FDCWD, "/dev/__properties__", {st_mode=S_IFDIR|0711, st_size=9560, ...}, 0) = 0
faccessat(AT_FDCWD, "/dev/__properties__/property_info", R_OK) = 0
openat(AT_FDCWD, "/dev/__properties__/property_info", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=119788, ...}) = 0
mmap(NULL, 119788, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece2f8000
close(3)                                = 0
mmap(NULL, 18960, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece2f3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece2f3000, 18960, "System property context nodes") = 0
openat(AT_FDCWD, "/dev/__properties__/properties_serial", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece2c3000
close(3)                                = 0
mmap(NULL, 40960, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece2b9000
mprotect(0x7ece2ba000, 32768, PROT_READ|PROT_WRITE) = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:build_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece289000
close(3)                                = 0
rt_sigaction(SIGABRT, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGBUS, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGFPE, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGILL, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGSEGV, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGSTKFLT, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGSYS, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGTRAP, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
rt_sigaction(SIGRT_3, {sa_handler=0x7ecf3e5eb4, sa_mask=~[], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, NULL, 8) = 0
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
openat(AT_FDCWD, "/dev/__properties__/u:object_r:debug_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece259000
close(3)                                = 0
newfstatat(AT_FDCWD, "/proc/self/exe", {st_mode=S_IFREG|0700, st_size=19456, ...}, 0) = 0
readlinkat(AT_FDCWD, "/proc/self/exe", "/data/data/com.termux/files/home"..., 4096) = 62
mmap(NULL, 409600, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1f5000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1f5000, 409600, "linker_alloc") = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:arm64_memtag_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece1c5000
close(3)                                = 0
prctl(PR_SET_TAGGED_ADDR_CTRL, PR_TAGGED_ADDR_ENABLE|PR_MTE_TCF_NONE, 0, 0, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c4000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c3000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c2000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c2000, 4096, "bionic_alloc_small_objects") = 0
newfstatat(AT_FDCWD, "/system/etc/ld.config.arm64.txt", 0x7ff4a0f2f0, 0) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, "/linkerconfig/ld.config.txt", {st_mode=S_IFREG|0644, st_size=188815, ...}, 0) = 0
openat(AT_FDCWD, "/linkerconfig/ld.config.txt", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=188815, ...}) = 0
mmap(NULL, 192512, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece193000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece193000, 192512, "bionic_alloc_lob") = 0
read(3, "dir.system = /system/bin/\ndir.sy"..., 1024) = 1024
read(3, "om_android_conscrypt,com_android"..., 1024) = 1024
read(3, "amework\nnamespace.default.permit"..., 1024) = 1024
read(3, "paths += /data/asan/system/syste"..., 1024) = 1024
read(3, "ystem/priv-app\nnamespace.default"..., 1024) = 1024
read(3, "/asan/system/vendor/app\nnamespac"..., 1024) = 1024
read(3, "pace.default.asan.permitted.path"..., 1024) = 1024
read(3, "d_i18n.shared_libs += libicu.so\n"..., 1024) = 1024
read(3, "_libs += libstatssocket.so\nnames"..., 1024) = 1024
read(3, "nk.default.shared_libs += liblog"..., 1024) = 1024
read(3, "ace.com_android_adservices.asan."..., 1024) = 1024
read(3, "h64-android.so:libclang_rt.asan-"..., 1024) = 1024
read(3, "= libdl.so\nnamespace.com_android"..., 1024) = 1024
read(3, "paths = /apex/com.android.art/${"..., 1024) = 1024
read(3, " libbinder_ndk.so\nnamespace.com_"..., 1024) = 1024
read(3, "rt.link.com_android_i18n.shared_"..., 1024) = 1024
read(3, "efault.shared_libs = libScalable"..., 1024) = 1024
read(3, "ices.link.default.shared_libs +="..., 1024) = 1024
read(3, "ed.paths = /apex/com.android.con"..., 1024) = 1024
read(3, "d.so:libclang_rt.hwasan-aarch64-"..., 1024) = 1024
read(3, "libs += libm.so\nnamespace.com_an"..., 1024) = 1024
read(3, "permitted.paths = /apex/com.andr"..., 1024) = 1024
read(3, "o\nnamespace.com_android_media.li"..., 1024) = 1024
read(3, "hs = /apex/com.android.neuralnet"..., 1024) = 1024
read(3, "space.com_android_neuralnetworks"..., 1024) = 1024
read(3, "os_statsd.permitted.paths += /sy"..., 1024) = 1024
read(3, "ault.shared_libs += libdl_androi"..., 1024) = 1024
read(3, "d_resolv.link.default.shared_lib"..., 1024) = 1024
read(3, "space.com_android_runtime.search"..., 1024) = 1024
read(3, "ace.com_android_runtime.link.def"..., 1024) = 1024
read(3, "ibs = libandroid.so\nnamespace.co"..., 1024) = 1024
read(3, "isolated = true\nnamespace.com_an"..., 1024) = 1024
read(3, "lt.shared_libs += libc.so\nnamesp"..., 1024) = 1024
read(3, "ibGLESv3.so:libRS.so:libandroid_"..., 1024) = 1024
read(3, "k.so:android.hardware.common-V2-"..., 1024) = 1024
read(3, "ase.so:libhidlmemory.so:libion.s"..., 1024) = 1024
read(3, "ace.rs.asan.search.paths += /dat"..., 1024) = 1024
read(3, ".so:libsync.so:libvndksupport.so"..., 1024) = 1024
read(3, "LIB}\nnamespace.sphal.asan.search"..., 1024) = 1024
read(3, "so:libGLESv2.so:libGLESv3.so:lib"..., 1024) = 1024
read(3, ".hardware.graphics.mapper@2.0.so"..., 1024) = 1024
read(3, "dm/${LIB}/hw\nnamespace.vndk.perm"..., 1024) = 1024
read(3, "dk.asan.permitted.paths += /data"..., 1024) = 1024
read(3, "o:libmediandk.so:libnativewindow"..., 1024) = 1024
read(3, "arch.paths += /product/${LIB}/vn"..., 1024) = 1024
read(3, "bclang_rt.asan-aarch64-android.s"..., 1024) = 1024
read(3, "B}\nnamespace.default.asan.search"..., 1024) = 1024
read(3, "droid.so:libclang_rt.asan-arm-an"..., 1024) = 1024
read(3, "y.token@1.0.so:android.hidl.memo"..., 1024) = 1024
read(3, "0.so:android.hardware.audio.effe"..., 1024) = 1024
read(3, "e.broadcastradio@1.1.so:android."..., 1024) = 1024
read(3, "droid.hardware.drm@1.1.so:androi"..., 1024) = 1024
read(3, "identity-V2-ndk_platform.so:andr"..., 1024) = 1024
read(3, ".power@1.2.so:android.hardware.p"..., 1024) = 1024
read(3, "ardware.tv.cec@1.0.so:android.ha"..., 1024) = 1024
read(3, "android.hidl.token@1.0-utils.so:"..., 1024) = 1024
read(3, "xresampler.so:libsqlite.so:libss"..., 1024) = 1024
read(3, "${LIB}\nnamespace.com_android_adb"..., 1024) = 1024
read(3, ".so:libclang_rt.ubsan_standalone"..., 1024) = 1024
read(3, "_i18n,com_android_os_statsd\nname"..., 1024) = 1024
read(3, "arch64-android.so:libclang_rt.ub"..., 1024) = 1024
read(3, "\nnamespace.com_android_i18n.link"..., 1024) = 1024
read(3, "ths = /apex/com.android.media/${"..., 1024) = 1024
read(3, "_android_media.link.system.share"..., 1024) = 1024
read(3, "arch.paths = /apex/com.android.n"..., 1024) = 1024
read(3, "og.so\nnamespace.com_android_neur"..., 1024) = 1024
read(3, "tsd.isolated = true\nnamespace.co"..., 1024) = 1024
read(3, "m.shared_libs += libm.so\nnamespa"..., 1024) = 1024
read(3, "rmitted.paths += /data/asan/syst"..., 1024) = 1024
read(3, "so\nnamespace.com_android_resolv."..., 1024) = 1024
read(3, "ink.system.shared_libs += libdl."..., 1024) = 1024
read(3, "/system/${LIB}\nnamespace.com_and"..., 1024) = 1024
read(3, "roid.so\nnamespace.com_android_te"..., 1024) = 1024
read(3, "= /data/asan/vendor/${LIB}\nnames"..., 1024) = 1024
read(3, "bs += libc.so\nnamespace.rs.link."..., 1024) = 1024
read(3, "ystem.permitted.paths += /system"..., 1024) = 1024
read(3, "amespace.system.permitted.paths "..., 1024) = 1024
read(3, "+= /data/asan/system/app\nnamespa"..., 1024) = 1024
read(3, "em.asan.permitted.paths += /data"..., 1024) = 1024
read(3, "ths += /data/asan/product/app\nna"..., 1024) = 1024
read(3, ".shared_libs += libadb_pairing_s"..., 1024) = 1024
read(3, ".so\nnamespace.system.link.com_an"..., 1024) = 1024
read(3, "rch.paths += /odm/${LIB}/vndk-sp"..., 1024) = 1024
read(3, "hs += /vendor/${LIB}/hw\nnamespac"..., 1024) = 1024
read(3, ".so\nnamespace.vndk.link.system.s"..., 1024) = 1024
read(3, "rmitted.paths += /product\nnamesp"..., 1024) = 1024
read(3, ".so:android.hardware.common.fmq-"..., 1024) = 1024
read(3, "nwindstack.so:libutils.so:libuti"..., 1024) = 1024
read(3, "e.confirmationui-support-lib.so:"..., 1024) = 1024
read(3, "1.0.so:android.hardware.media@1."..., 1024) = 1024
read(3, "droid.hardware.radio.sim-V1-ndk_"..., 1024) = 1024
read(3, "are.vibrator-V2-ndk.so:android.h"..., 1024) = 1024
read(3, "l.so:libdiskconfig.so:libdumpsta"..., 1024) = 1024
read(3, "IB}\nnamespace.com_android_adbd.p"..., 1024) = 1024
read(3, " libc.so\nnamespace.com_android_a"..., 1024) = 1024
read(3, "mespace.com_android_art.asan.per"..., 1024) = 1024
read(3, "bs += libz.so\nnamespace.com_andr"..., 1024) = 1024
read(3, "n.permitted.paths = /apex/com.an"..., 1024) = 1024
read(3, "bs += libclang_rt.asan-aarch64-a"..., 1024) = 1024
read(3, "amespace.com_android_media.link."..., 1024) = 1024
read(3, "ch64-android.so:libclang_rt.asan"..., 1024) = 1024
read(3, "links = system,com_android_os_st"..., 1024) = 1024
read(3, "shared_libs += libm.so\nnamespace"..., 1024) = 1024
read(3, "inks = system\nnamespace.com_andr"..., 1024) = 1024
read(3, "com_android_resolv.search.paths "..., 1024) = 1024
read(3, "red_libs += libdl.so\nnamespace.c"..., 1024) = 1024
read(3, "ted.paths += /data/asan/system/$"..., 1024) = 1024
read(3, "com.android.tethering/${LIB}\nnam"..., 1024) = 1024
read(3, "libs += libdl.so\nnamespace.com_a"..., 1024) = 1024
read(3, "v-app\nnamespace.system.permitted"..., 1024) = 1024
read(3, "e/${LIB}/bionic\nnamespace.system"..., 1024) = 1024
read(3, ".permitted.paths += /data/asan/s"..., 1024) = 1024
read(3, "pp\nnamespace.system.asan.permitt"..., 1024) = 1024
read(3, "asan.permitted.paths += /data/as"..., 1024) = 1024
read(3, ".com_android_adbd.shared_libs +="..., 1024) = 1024
read(3, "libneuralnetworks.so\nnamespace.s"..., 1024) = 1024
read(3, "oid_net.so:libbinder_ndk.so:libc"..., 1024) = 1024
read(3, "com_android_neuralnetworks,com_a"..., 1024) = 1024
read(3, "efault.asan.search.paths += /pro"..., 1024) = 1024
read(3, ".link.com_android_art.shared_lib"..., 1024) = 1024
read(3, "x/com.android.adbd/${LIB}\nnamesp"..., 1024) = 1024
read(3, ".default.shared_libs += libclang"..., 1024) = 1024
read(3, "ndroid_adservices.link.default.s"..., 1024) = 1024
read(3, "appsearch.permitted.paths += /sy"..., 1024) = 1024
read(3, "h.link.default.shared_libs += li"..., 1024) = 1024
read(3, "com_android_art.asan.permitted.p"..., 1024) = 1024
read(3, "so\nnamespace.com_android_art.lin"..., 1024) = 1024
read(3, "btservices/${LIB}\nnamespace.com_"..., 1024) = 1024
read(3, "fault.shared_libs += libdl.so\nna"..., 1024) = 1024
read(3, "vehelper.so\nnamespace.com_androi"..., 1024) = 1024
read(3, "ed_libs += libdl.so\nnamespace.co"..., 1024) = 1024
read(3, "earch.paths = /apex/com.android."..., 1024) = 1024
read(3, "dalone-aarch64-android.so:libcla"..., 1024) = 1024
read(3, ".so\nnamespace.com_android_media."..., 1024) = 1024
read(3, "rch64-android.so:libclang_rt.ubs"..., 1024) = 1024
read(3, "o\nnamespace.com_android_neuralne"..., 1024) = 1024
read(3, "n-aarch64-android.so:libclang_rt"..., 1024) = 1024
read(3, "ault.shared_libs = libbinder_ndk"..., 1024) = 1024
read(3, ".android.resolv/${LIB}\nnamespace"..., 1024) = 1024
read(3, "android_resolv.link.default.shar"..., 1024) = 1024
read(3, "{LIB}\nnamespace.com_android_runt"..., 1024) = 1024
read(3, "rmitted.paths = /apex/com.androi"..., 1024) = 1024
read(3, "_tethering.link.default.shared_l"..., 1024) = 1024
read(3, "= /data/asan/system/${LIB}\nnames"..., 1024) = 1024
read(3, "m-android.so\nnamespace.rs.isolat"..., 1024) = 1024
read(3, "space.rs.asan.permitted.paths = "..., 1024) = 1024
read(3, ".link.default.shared_libs += lib"..., 1024) = 1024
read(3, " += /vendor/${LIB}\nnamespace.sph"..., 1024) = 1024
read(3, "ibnativewindow.so:libneuralnetwo"..., 1024) = 1024
read(3, "ry.token@1.0.so:android.hidl.mem"..., 1024) = 1024
read(3, "em/vendor/${LIB}/hw\nnamespace.vn"..., 1024) = 1024
read(3, "ths += /vendor/${LIB}/hw\nnamespa"..., 1024) = 1024
read(3, "libdl.so\nnamespace.vndk.link.def"..., 1024) = 1024
read(3, "B}\n[isolated]\nadditional.namespa"..., 1024) = 1024
read(3, "ermitted.paths += /system/${LIB}"..., 1024) = 1024
read(3, "standalone-aarch64-android.so:li"..., 1024) = 1024
read(3, "rvices.link.system.shared_libs +"..., 1024) = 1024
read(3, "arch.asan.permitted.paths = /ape"..., 1024) = 1024
read(3, "clang_rt.hwasan-aarch64-android."..., 1024) = 1024
read(3, "= /data\nnamespace.com_android_ar"..., 1024) = 1024
read(3, "libs += libm.so\nnamespace.com_an"..., 1024) = 1024
read(3, "com_android_btservices.asan.perm"..., 1024) = 1024
read(3, "services.link.system.shared_libs"..., 1024) = 1024
read(3, "mespace.com_android_conscrypt.se"..., 1024) = 1024
read(3, "ed_libs += libc.so\nnamespace.com"..., 1024) = 1024
read(3, "om_android_i18n.asan.permitted.p"..., 1024) = 1024
read(3, "a.visible = true\nnamespace.com_a"..., 1024) = 1024
read(3, "media.link.system.shared_libs +="..., 1024) = 1024
read(3, "visible = true\nnamespace.com_and"..., 1024) = 1024
read(3, "android_neuralnetworks.link.syst"..., 1024) = 1024
read(3, "_libs = libstatssocket.so\nnamesp"..., 1024) = 1024
read(3, "com_android_os_statsd.link.syste"..., 1024) = 1024
read(3, "id_resolv.asan.permitted.paths ="..., 1024) = 1024
read(3, "-android.so:libclang_rt.ubsan_st"..., 1024) = 1024
read(3, "g.so\nnamespace.com_android_runti"..., 1024) = 1024
read(3, "ing/${LIB}\nnamespace.com_android"..., 1024) = 1024
read(3, "ng_rt.asan-arm-android.so:libcla"..., 1024) = 1024
read(3, "ystem.shared_libs += libdl.so\nna"..., 1024) = 1024
read(3, "ystem/${LIB}/hw\nnamespace.system"..., 1024) = 1024
read(3, ".paths += /product/app\nnamespace"..., 1024) = 1024
read(3, "ext/${LIB}\nnamespace.system.asan"..., 1024) = 1024
read(3, "stem.asan.permitted.paths += /da"..., 1024) = 1024
read(3, "d.paths += /data/asan/oem/app\nna"..., 1024) = 1024
read(3, "m_android_neuralnetworks,com_and"..., 1024) = 1024
read(3, "sigchain.so\nnamespace.system.lin"..., 1024) = 399
read(3, "", 1024)                       = 0
close(3)                                = 0
faccessat(AT_FDCWD, "/system/bin", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/system/xbin", R_OK) = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/system/system_ext/bin", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/product/bin", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/odm/bin", R_OK)   = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/vendor/bin", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/nativetest/odm", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/nativetest64/odm", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/benchmarktest/odm", R_OK) = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/data/benchmarktest64/odm", R_OK) = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/data/nativetest/vendor", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/nativetest64/vendor", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/benchmarktest/vendor", R_OK) = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/data/benchmarktest64/vendor", R_OK) = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/data/nativetest/unrestricted", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/nativetest64/unrestricted", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/local/tmp/isolated", R_OK) = -1 ENOENT (No such file or directory)
faccessat(AT_FDCWD, "/data/local/tests/product", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/local/tests/system", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/local/tests/unrestricted", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/local/tests/vendor", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data/local/tmp", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/postinstall", R_OK) = -1 EACCES (Permission denied)
faccessat(AT_FDCWD, "/data", R_OK)      = -1 EACCES (Permission denied)
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece192000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece192000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece191000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece191000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece190000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece190000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece191000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece191000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece191000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece190000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece190000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece190000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece191000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece191000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece191000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece190000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece190000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece190000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece191000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece191000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece191000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece190000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece190000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece190000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece191000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece191000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece191000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece190000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece190000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece190000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece191000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece191000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece191000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece190000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece190000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece190000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece18f000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece18f000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece18e000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece18e000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece18d000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece18d000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece18c000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece18c000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece18b000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece18b000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece18a000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece18a000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece189000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece189000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece188000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece188000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece187000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece187000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece186000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece185000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece185000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece184000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece184000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece186000, 4096)              = 0
munmap(0x7ece185000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece186000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece185000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece185000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece186000, 4096)              = 0
munmap(0x7ece184000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece186000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece184000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece184000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece183000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece183000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece182000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece182000, 4096, "bionic_alloc_small_objects") = 0
munmap(0x7ece193000, 192512)            = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c1000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c1000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:vndk_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece152000
close(3)                                = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
mprotect(0x7ece37d000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ece37d000, 4096, PROT_READ) = 0
openat(AT_FDCWD, "/odm/lib64/vndk-sp", O_RDONLY|O_CLOEXEC|O_PATH) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, "/odm/lib64/vndk-sp", 0x7ff4a0ce50, 0) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/vendor/lib64/vndk-sp", O_RDONLY|O_CLOEXEC|O_PATH) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, "/vendor/lib64/vndk-sp", 0x7ff4a0ce50, 0) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/apex/com.android.vndk.v30/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=12288, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.vndk.v30/lib64", 4095) = 32
newfstatat(AT_FDCWD, "/apex/com.android.vndk.v30/lib64", {st_mode=S_IFDIR|0755, st_size=12288, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.vndk.v30/lib64", {st_mode=S_IFDIR|0755, st_size=12288, ...}, 0) = 0
openat(AT_FDCWD, "/odm/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, "/odm/lib64", 0x7ff4a0ce50, 0) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/vendor/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=28672, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/vendor/lib64", 4095) = 13
newfstatat(AT_FDCWD, "/vendor/lib64", {st_mode=S_IFDIR|0755, st_size=28672, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/vendor/lib64", {st_mode=S_IFDIR|0755, st_size=28672, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c0000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c0000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/product/lib64/vndk-sp", O_RDONLY|O_CLOEXEC|O_PATH) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, "/product/lib64/vndk-sp", 0x7ff4a0ce50, 0) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/apex/com.android.vndk.v33/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=12288, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.vndk.v33/lib64", 4095) = 32
newfstatat(AT_FDCWD, "/apex/com.android.vndk.v33/lib64", {st_mode=S_IFDIR|0755, st_size=12288, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.vndk.v33/lib64", {st_mode=S_IFDIR|0755, st_size=12288, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1bf000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1bf000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/product/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, "/product/lib64", 0x7ff4a0ce50, 0) = -1 ENOENT (No such file or directory)
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1be000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1be000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1bd000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1bd000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece1be000, 4096)              = 0
openat(AT_FDCWD, "/apex/com.android.uwb/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.uwb/lib64", 4095) = 27
newfstatat(AT_FDCWD, "/apex/com.android.uwb/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.uwb/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.tethering/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.tethering/lib6"..., 4095) = 33
newfstatat(AT_FDCWD, "/apex/com.android.tethering/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.tethering/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.runtime/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.runtime/lib64", 4095) = 31
newfstatat(AT_FDCWD, "/apex/com.android.runtime/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.runtime/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.conscrypt/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.conscrypt/lib6"..., 4095) = 33
newfstatat(AT_FDCWD, "/apex/com.android.conscrypt/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.conscrypt/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1be000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1be000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/apex/com.android.media/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.media/lib64", 4095) = 29
newfstatat(AT_FDCWD, "/apex/com.android.media/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.media/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1bc000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1bc000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1bb000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1bb000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/apex/com.android.btservices/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.btservices/lib"..., 4095) = 34
newfstatat(AT_FDCWD, "/apex/com.android.btservices/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.btservices/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1ba000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1ba000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/vendor/lib64/egl", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/vendor/lib64/egl", 4095) = 17
newfstatat(AT_FDCWD, "/vendor/lib64/egl", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/vendor/lib64/egl", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/vendor/lib64/hw", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/vendor/lib64/hw", 4095) = 16
newfstatat(AT_FDCWD, "/vendor/lib64/hw", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/vendor/lib64/hw", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.neuralnetworks/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.neuralnetworks"..., 4095) = 38
newfstatat(AT_FDCWD, "/apex/com.android.neuralnetworks/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.neuralnetworks/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.i18n/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.i18n/lib64", 4095) = 28
newfstatat(AT_FDCWD, "/apex/com.android.i18n/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.i18n/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.resolv/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.resolv/lib64", 4095) = 30
newfstatat(AT_FDCWD, "/apex/com.android.resolv/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.resolv/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.art/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.art/lib64", 4095) = 27
newfstatat(AT_FDCWD, "/apex/com.android.art/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.art/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.adservices/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.adservices/lib"..., 4095) = 34
newfstatat(AT_FDCWD, "/apex/com.android.adservices/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.adservices/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.appsearch/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.appsearch/lib6"..., 4095) = 33
newfstatat(AT_FDCWD, "/apex/com.android.appsearch/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.appsearch/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b9000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b9000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/apex/com.android.os.statsd/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.os.statsd/lib6"..., 4095) = 33
newfstatat(AT_FDCWD, "/apex/com.android.os.statsd/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.os.statsd/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/apex/com.android.adbd/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/apex/com.android.adbd/lib64", 4095) = 28
newfstatat(AT_FDCWD, "/apex/com.android.adbd/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/apex/com.android.adbd/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b8000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b8000, 4096, "bionic_alloc_small_objects") = 0
openat(AT_FDCWD, "/system/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=40960, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/system/lib64", 4095) = 13
newfstatat(AT_FDCWD, "/system/lib64", {st_mode=S_IFDIR|0755, st_size=40960, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/system/lib64", {st_mode=S_IFDIR|0755, st_size=40960, ...}, 0) = 0
openat(AT_FDCWD, "/system/system_ext/lib64", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=8192, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/system/system_ext/lib64", 4095) = 24
newfstatat(AT_FDCWD, "/system/system_ext/lib64", {st_mode=S_IFDIR|0755, st_size=8192, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/system/system_ext/lib64", {st_mode=S_IFDIR|0755, st_size=8192, ...}, 0) = 0
munmap(0x7ece184000, 4096)              = 0
munmap(0x7ece185000, 4096)              = 0
munmap(0x7ece1c2000, 4096)              = 0
munmap(0x7ece188000, 4096)              = 0
munmap(0x7ece191000, 4096)              = 0
munmap(0x7ece190000, 4096)              = 0
munmap(0x7ece186000, 4096)              = 0
munmap(0x7ece18c000, 4096)              = 0
munmap(0x7ece189000, 4096)              = 0
munmap(0x7ece18a000, 4096)              = 0
munmap(0x7ece1c4000, 4096)              = 0
munmap(0x7ece18b000, 4096)              = 0
mmap(NULL, 409600, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece0ee000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece0ee000, 409600, "linker_alloc") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c4000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1c2000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1c2000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b7000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b7000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b6000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b6000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b5000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b5000, 4096, "bionic_alloc_small_objects") = 0
munmap(0x7ece1b6000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b6000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b6000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b4000, 4096, "bionic_alloc_lob") = 0
munmap(0x7ece1b6000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b6000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b6000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b3000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b2000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b2000, 4096, "bionic_alloc_small_objects") = 0
munmap(0x7ece1b4000, 4096)              = 0
munmap(0x7ece1b2000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b4000, 4096, "bionic_alloc_lob") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b2000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b2000, 4096, "bionic_alloc_small_objects") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b1000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b1000, 4096, "bionic_alloc_small_objects") = 0
munmap(0x7ece1b4000, 4096)              = 0
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", O_RDONLY|O_CLOEXEC|O_PATH) = 3
fstat(3, {st_mode=S_IFDIR|0700, st_size=53248, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/data/data/com.termux/files/usr/"..., 4095) = 35
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", {st_mode=S_IFDIR|0700, st_size=53248, ...}, 0) = 0
close(3)                                = 0
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", {st_mode=S_IFDIR|0700, st_size=53248, ...}, 0) = 0
mmap(NULL, 409600, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece08a000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece08a000, 409600, "linker_alloc") = 0
mmap(NULL, 409600, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece026000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece026000, 409600, "linker_alloc") = 0
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib/libtermux-exec.so", O_RDONLY|O_CLOEXEC) = 3
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/data/data/com.termux/files/usr/"..., 4096) = 53
fstat(3, {st_mode=S_IFREG|0700, st_size=7792, ...}) = 0
fstatfs(3, {f_type=F2FS_SUPER_MAGIC, f_bsize=4096, f_blocks=28082171, f_bfree=7071718, f_bavail=7038950, f_files=13511677, f_ffree=7038950, f_fsid={val=[0x10314, 0]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_NOSUID|ST_NODEV|ST_NOATIME}) = 0
pread64(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0t\34\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 632, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7ece1b4000
mmap(NULL, 5984, PROT_READ, MAP_PRIVATE, 3, 0x1000) = 0x7ece1af000
mmap(NULL, 2816, PROT_READ, MAP_PRIVATE, 3, 0x1000) = 0x7ece1ae000
mmap(NULL, 3535, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7ece1ad000
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", O_RDONLY|O_CLOEXEC|O_PATH) = 4
fstat(4, {st_mode=S_IFDIR|0700, st_size=53248, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/4", "/data/data/com.termux/files/usr/"..., 4095) = 35
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", {st_mode=S_IFDIR|0700, st_size=53248, ...}, 0) = 0
close(4)                                = 0
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", {st_mode=S_IFDIR|0700, st_size=53248, ...}, 0) = 0
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib/libclang_rt.asan-aarch64-android.so", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/system/lib64/libclang_rt.asan-aarch64-android.so", O_RDONLY|O_CLOEXEC) = 4
readlinkat(AT_FDCWD, "/proc/self/fd/4", "/system/lib64/libclang_rt.asan-a"..., 4096) = 49
fstat(4, {st_mode=S_IFREG|0644, st_size=2269072, ...}) = 0
fstatfs(4, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=1678691, f_bfree=6793, f_bavail=6793, f_files=7488, f_ffree=994, f_fsid={val=[0x25957ce9, 0xcc9ffedf]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_RELATIME}) = 0
pread64(4, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 856, PROT_READ, MAP_PRIVATE, 4, 0) = 0x7ece1ac000
mmap(NULL, 5728, PROT_READ, MAP_PRIVATE, 4, 0x229000) = 0x7ece1aa000
mmap(NULL, 2688, PROT_READ, MAP_PRIVATE, 4, 0xcd000) = 0x7ece1a9000
mmap(NULL, 50466, PROT_READ, MAP_PRIVATE, 4, 0xc000) = 0x7ece19c000
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib/libdl.so", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/system/lib64/libdl.so", O_RDONLY|O_CLOEXEC) = 5
readlinkat(AT_FDCWD, "/proc/self/fd/5", "/apex/com.android.runtime/lib64/"..., 4096) = 47
fstat(5, {st_mode=S_IFREG|0644, st_size=13808, ...}) = 0
fstatfs(5, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=2188, f_bfree=9, f_bavail=9, f_files=64, f_ffree=14, f_fsid={val=[0x2ba2bd9, 0x8b5c2839]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_NODEV|ST_NOATIME}) = 0
pread64(5, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 800, PROT_READ, MAP_PRIVATE, 5, 0) = 0x7ece19b000
mmap(NULL, 1888, PROT_READ, MAP_PRIVATE, 5, 0x3000) = 0x7ece19a000
mmap(NULL, 288, PROT_READ, MAP_PRIVATE, 5, 0x2000) = 0x7ece199000
mmap(NULL, 3994, PROT_READ, MAP_PRIVATE, 5, 0) = 0x7ece198000
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib/libc.so", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/system/lib64/libc.so", O_RDONLY|O_CLOEXEC) = 6
readlinkat(AT_FDCWD, "/proc/self/fd/6", "/apex/com.android.runtime/lib64/"..., 4096) = 46
fstat(6, {st_mode=S_IFREG|0644, st_size=1354640, ...}) = 0
fstatfs(6, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=2188, f_bfree=9, f_bavail=9, f_files=64, f_ffree=14, f_fsid={val=[0x2ba2bd9, 0x8b5c2839]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_NODEV|ST_NOATIME}) = 0
pread64(6, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 856, PROT_READ, MAP_PRIVATE, 6, 0) = 0x7ece197000
mmap(NULL, 4000, PROT_READ, MAP_PRIVATE, 6, 0x14a000) = 0x7ece196000
mmap(NULL, 2128, PROT_READ, MAP_PRIVATE, 6, 0x107000) = 0x7ece195000
mmap(NULL, 20289, PROT_READ, MAP_PRIVATE, 6, 0xc000) = 0x7ece188000
openat(AT_FDCWD, "/system/lib64/libm.so", O_RDONLY|O_CLOEXEC) = 7
readlinkat(AT_FDCWD, "/proc/self/fd/7", "/apex/com.android.runtime/lib64/"..., 4096) = 46
fstat(7, {st_mode=S_IFREG|0644, st_size=229368, ...}) = 0
fstatfs(7, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=2188, f_bfree=9, f_bavail=9, f_files=64, f_ffree=14, f_fsid={val=[0x2ba2bd9, 0x8b5c2839]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_NODEV|ST_NOATIME}) = 0
pread64(7, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 800, PROT_READ, MAP_PRIVATE, 7, 0) = 0x7ece194000
mmap(NULL, 6448, PROT_READ, MAP_PRIVATE, 7, 0x37000) = 0x7ece190000
mmap(NULL, 496, PROT_READ, MAP_PRIVATE, 7, 0x37000) = 0x7ece193000
mmap(NULL, 6648, PROT_READ, MAP_PRIVATE, 7, 0x2000) = 0x7ece185000
openat(AT_FDCWD, "/system/lib64/liblog.so", O_RDONLY|O_CLOEXEC) = 8
readlinkat(AT_FDCWD, "/proc/self/fd/8", "/system/lib64/liblog.so", 4096) = 23
fstat(8, {st_mode=S_IFREG|0644, st_size=66536, ...}) = 0
fstatfs(8, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=1678691, f_bfree=6793, f_bavail=6793, f_files=7488, f_ffree=994, f_fsid={val=[0x25957ce9, 0xcc9ffedf]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_RELATIME}) = 0
pread64(8, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 800, PROT_READ, MAP_PRIVATE, 8, 0) = 0x7ece184000
mmap(NULL, 8400, PROT_READ, MAP_PRIVATE, 8, 0xf000) = 0x7ece023000
mmap(NULL, 592, PROT_READ, MAP_PRIVATE, 8, 0xf000) = 0x7ece022000
mmap(NULL, 6198, PROT_READ, MAP_PRIVATE, 8, 0x1000) = 0x7ece020000
openat(AT_FDCWD, "/system/lib64/libc++.so", O_RDONLY|O_CLOEXEC) = 9
readlinkat(AT_FDCWD, "/proc/self/fd/9", "/system/lib64/libc++.so", 4096) = 23
fstat(9, {st_mode=S_IFREG|0644, st_size=720976, ...}) = 0
fstatfs(9, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=1678691, f_bfree=6793, f_bavail=6793, f_files=7488, f_ffree=994, f_fsid={val=[0x25957ce9, 0xcc9ffedf]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_RELATIME}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece01f000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece01f000, 4096, "bionic_alloc_small_objects") = 0
pread64(9, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 800, PROT_READ, MAP_PRIVATE, 9, 0) = 0x7ece01e000
mmap(NULL, 6560, PROT_READ, MAP_PRIVATE, 9, 0xaf000) = 0x7ece01c000
mmap(NULL, 7872, PROT_READ, MAP_PRIVATE, 9, 0xac000) = 0x7ece01a000
mmap(NULL, 104740, PROT_READ, MAP_PRIVATE, 9, 0x12000) = 0x7ece000000
mmap(NULL, 520192, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecdf81000
munmap(0x7ecdf81000, 389120)            = 0
munmap(0x7ecdfe5000, 110592)            = 0
mmap(0x7ecdfe0000, 3116, PROT_READ, MAP_PRIVATE|MAP_FIXED, 5, 0) = 0x7ecdfe0000
mmap(0x7ecdfe1000, 872, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 5, 0x1000) = 0x7ecdfe1000
mmap(0x7ecdfe2000, 400, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 5, 0x2000) = 0x7ecdfe2000
mmap(0x7ecdfe4000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ecdfe4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecdfe4000, 4096, ".bss") = 0
mmap(NULL, 3665920, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecdc61000
munmap(0x7ecdc61000, 3665920)           = 0
mmap(NULL, 50327552, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecafe1000
munmap(0x7ecafe1000, 876544)            = 0
munmap(0x7ecb3dc000, 147456)            = 0
munmap(0x7ecde00000, 1966080)           = 0
mmap(0x7ecb0b7000, 293556, PROT_READ, MAP_PRIVATE|MAP_FIXED, 6, 0) = 0x7ecb0b7000
mmap(0x7ecb0ff000, 758896, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 6, 0x48000) = 0x7ecb0ff000
mmap(0x7ecb1b9000, 26760, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 6, 0x102000) = 0x7ecb1b9000
mmap(0x7ecb1c0000, 8248, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 6, 0x108000) = 0x7ecb1c0000
mmap(0x7ecb1c3000, 2199552, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ecb1c3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecb1c3000, 2199552, ".bss") = 0
mmap(NULL, 520192, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecdf61000
munmap(0x7ecdf61000, 139264)            = 0
munmap(0x7ecdf94000, 311296)            = 0
mmap(0x7ecdf83000, 17772, PROT_READ, MAP_PRIVATE|MAP_FIXED, 8, 0) = 0x7ecdf83000
mmap(0x7ecdf88000, 38360, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 8, 0x5000) = 0x7ecdf88000
mmap(0x7ecdf92000, 1456, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 8, 0xf000) = 0x7ecdf92000
mmap(0x7ecdf93000, 1621, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 8, 0xf000) = 0x7ecdf93000
mmap(NULL, 3403776, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecad78000
munmap(0x7ecad78000, 3403776)           = 0
mmap(NULL, 60813312, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ec76b8000
munmap(0x7ec76b8000, 2277376)           = 0
munmap(0x7ec7be4000, 114688)            = 0
munmap(0x7ecb000000, 749568)            = 0
mmap(0x7ec78e4000, 283588, PROT_READ, MAP_PRIVATE|MAP_FIXED, 4, 0) = 0x7ec78e4000
mmap(0x7ec792a000, 556120, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 4, 0x45000) = 0x7ec792a000
mmap(0x7ec79b2000, 14464, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 4, 0xcc000) = 0x7ec79b2000
mmap(0x7ec79b6000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 4, 0xcf000) = 0x7ec79b6000
mmap(0x7ec79b9000, 2273280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ec79b9000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ec79b9000, 2273280, ".bss") = 0
mmap(NULL, 1044480, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecde84000
munmap(0x7ecde84000, 249856)            = 0
munmap(0x7ecdf74000, 61440)             = 0
mmap(0x7ecdec1000, 299500, PROT_READ, MAP_PRIVATE|MAP_FIXED, 9, 0) = 0x7ecdec1000
mmap(0x7ecdf0b000, 383528, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 9, 0x4a000) = 0x7ecdf0b000
mmap(0x7ecdf69000, 25160, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 9, 0xa8000) = 0x7ecdf69000
mmap(0x7ecdf70000, 625, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 9, 0xae000) = 0x7ecdf70000
mmap(0x7ecdf71000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ecdf71000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecdf71000, 12288, ".bss") = 0
mmap(NULL, 520192, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecde42000
munmap(0x7ecde42000, 270336)            = 0
munmap(0x7ecdebd000, 16384)             = 0
mmap(0x7ecde84000, 71124, PROT_READ, MAP_PRIVATE|MAP_FIXED, 7, 0) = 0x7ecde84000
mmap(0x7ecde96000, 147976, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 7, 0x12000) = 0x7ecde96000
mmap(0x7ecdebb000, 736, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 7, 0x37000) = 0x7ecdebb000
mmap(0x7ecdebc000, 864, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 7, 0x37000) = 0x7ecdebc000
mmap(NULL, 520192, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecde05000
munmap(0x7ecde05000, 466944)            = 0
munmap(0x7ecde7b000, 36864)             = 0
mmap(0x7ecde77000, 3188, PROT_READ, MAP_PRIVATE|MAP_FIXED, 3, 0) = 0x7ecde77000
mmap(0x7ecde78000, 5280, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 3, 0) = 0x7ecde78000
mmap(0x7ecde7a000, 1808, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 3, 0x1000) = 0x7ecde7a000
openat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", O_RDONLY|O_CLOEXEC|O_PATH) = 10
fstat(10, {st_mode=S_IFDIR|0700, st_size=53248, ...}) = 0
readlinkat(AT_FDCWD, "/proc/self/fd/10", "/data/data/com.termux/files/usr/"..., 4095) = 35
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", {st_mode=S_IFDIR|0700, st_size=53248, ...}, 0) = 0
close(10)                               = 0
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/lib", {st_mode=S_IFDIR|0700, st_size=53248, ...}, 0) = 0
rt_sigprocmask(SIG_BLOCK, ~[], [RTMIN], 8) = 0
rt_sigprocmask(SIG_SETMASK, [RTMIN], NULL, 8) = 0
rt_sigprocmask(SIG_BLOCK, ~[], [RTMIN], 8) = 0
rt_sigprocmask(SIG_SETMASK, [RTMIN], NULL, 8) = 0
mmap(NULL, 409600, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecde13000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecde13000, 409600, "linker_alloc") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecdfff000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecdfff000, 4096, "bionic_alloc_lob") = 0
mprotect(0x57bad71000, 4096, PROT_READ) = 0
mprotect(0x7ecde7a000, 4096, PROT_READ) = 0
mprotect(0x7ec79b2000, 16384, PROT_READ) = 0
mprotect(0x7ecdfe2000, 4096, PROT_READ) = 0
mprotect(0x7ecb1b9000, 28672, PROT_READ) = 0
mprotect(0x7ecdebb000, 4096, PROT_READ) = 0
mprotect(0x7ecdf92000, 4096, PROT_READ) = 0
mprotect(0x7ecdf69000, 28672, PROT_READ) = 0
munmap(0x7ecdfff000, 4096)              = 0
close(3)                                = 0
close(4)                                = 0
close(5)                                = 0
close(6)                                = 0
close(7)                                = 0
close(8)                                = 0
close(9)                                = 0
munmap(0x7ece020000, 6198)              = 0
munmap(0x7ece022000, 592)               = 0
munmap(0x7ece023000, 8400)              = 0
munmap(0x7ece184000, 800)               = 0
munmap(0x7ece000000, 104740)            = 0
munmap(0x7ece01a000, 7872)              = 0
munmap(0x7ece01c000, 6560)              = 0
munmap(0x7ece01e000, 800)               = 0
munmap(0x7ece188000, 20289)             = 0
munmap(0x7ece195000, 2128)              = 0
munmap(0x7ece196000, 4000)              = 0
munmap(0x7ece197000, 856)               = 0
munmap(0x7ece198000, 3994)              = 0
munmap(0x7ece199000, 288)               = 0
munmap(0x7ece19a000, 1888)              = 0
munmap(0x7ece19b000, 800)               = 0
munmap(0x7ece185000, 6648)              = 0
munmap(0x7ece193000, 496)               = 0
munmap(0x7ece190000, 6448)              = 0
munmap(0x7ece194000, 800)               = 0
munmap(0x7ece19c000, 50466)             = 0
munmap(0x7ece1a9000, 2688)              = 0
munmap(0x7ece1aa000, 5728)              = 0
munmap(0x7ece1ac000, 856)               = 0
munmap(0x7ece1ad000, 3535)              = 0
munmap(0x7ece1ae000, 2816)              = 0
munmap(0x7ece1af000, 5984)              = 0
munmap(0x7ece1b4000, 632)               = 0
mmap(NULL, 24576, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ece1ab000
mprotect(0x7ece1ac000, 16384, PROT_READ|PROT_WRITE) = 0
rt_sigprocmask(SIG_BLOCK, ~[], [RTMIN], 8) = 0
rt_sigprocmask(SIG_SETMASK, [RTMIN], NULL, 8) = 0
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1ac000, 16384, "stack_and_tls:main") = 0
munmap(0x7ecf388000, 12288)             = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ) = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ|PROT_WRITE) = 0
readlinkat(AT_FDCWD, "/proc/self/exe", "/data/data/com.termux/files/home"..., 4096) = 62
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf38a000
openat(AT_FDCWD, "/proc/self/cmdline", O_RDONLY) = 3
read(3, "build/fdtest\0", 4096)         = 13
read(3, "", 4083)                       = 0
close(3)                                = 0
munmap(0x7ecf38a000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf38a000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf38a000, 4096, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/environ", O_RDONLY) = 3
read(3, "VIM=/data/data/com.termux/files/"..., 4096) = 4096
close(3)                                = 0
munmap(0x7ecf38a000, 4096)              = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf389000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf389000, 8192, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/environ", O_RDONLY) = 3
read(3, "VIM=/data/data/com.termux/files/"..., 8192) = 6058
read(3, "", 2134)                       = 0
close(3)                                = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a9000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a9000, 8192, "Allocate") = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a7000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a7000, 8192, "Allocate") = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a5000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a5000, 8192, "Allocate") = 0
mmap(NULL, 3727360, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ec7556000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ec7556000, 3727360, "AddrHashMap") = 0
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
getrlimit(RLIMIT_CORE, {rlim_cur=0, rlim_max=RLIM64_INFINITY}) = 0
setrlimit(RLIMIT_CORE, {rlim_cur=0, rlim_max=RLIM64_INFINITY}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf388000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf388000, 4096, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "57bad6d000-57bad6f000 r--p 00000"..., 4096) = 4091
read(3, "7ecdf", 5)                     = 5
close(3)                                = 0
munmap(0x7ecf388000, 4096)              = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a3000, 8192, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "57bad6d000-57bad6f000 r--p 00000"..., 8192) = 4091
read(3, "7ecdfe4000-7ecdfe5000 rw-p 00000"..., 4101) = 4087
read(3, "7ecf4c7000-7ec", 14)           = 14
close(3)                                = 0
munmap(0x7ece1a3000, 8192)              = 0
mmap(NULL, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a1000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a1000, 16384, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "57bad6d000-57bad6f000 r--p 00000"..., 16384) = 4091
read(3, "7ecdfe4000-7ecdfe5000 rw-p 00000"..., 12293) = 4087
read(3, "7ecf4c7000-7ecf4c9000 rw-p 00000"..., 8206) = 166
read(3, "", 8040)                       = 0
close(3)                                = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf388000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf388000, 4096, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "57bad6d000-57bad6f000 r--p 00000"..., 4096) = 4091
read(3, "7ecdf", 5)                     = 5
close(3)                                = 0
munmap(0x7ecf388000, 4096)              = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece19f000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece19f000, 8192, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "57bad6d000-57bad6f000 r--p 00000"..., 8192) = 4091
read(3, "7ecdfe4000-7ecdfe5000 rw-p 00000"..., 4101) = 4087
read(3, "7ecf4c7000-7ec", 14)           = 14
close(3)                                = 0
munmap(0x7ece19f000, 8192)              = 0
mmap(NULL, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece19d000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece19d000, 16384, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "57bad6d000-57bad6f000 r--p 00000"..., 16384) = 4091
read(3, "7ecdfe4000-7ecdfe5000 rw-p 00000"..., 12293) = 4087
read(3, "7ecf4c7000-7ecf4c9000 rw-p 00000"..., 8206) = 166
read(3, "", 8040)                       = 0
close(3)                                = 0
munmap(0x7ece19d000, 16384)             = 0
mmap(0xffffff000, 8589938688, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0xffffff000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0xffffff000, 8589938688, "low shadow") = 0
madvise(0xffffff000, 8589938688, MADV_NOHUGEPAGE) = -1 EINVAL (Invalid argument)
madvise(0xffffff000, 8589938688, MADV_DONTDUMP) = 0
mmap(0x1400000000, 51539607552, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x1400000000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x1400000000, 51539607552, "high shadow") = 0
madvise(0x1400000000, 51539607552, MADV_NOHUGEPAGE) = -1 EINVAL (Invalid argument)
madvise(0x1400000000, 51539607552, MADV_DONTDUMP) = 0
mmap(0x1200000000, 8589934592, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x1200000000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x1200000000, 8589934592, "shadow gap") = 0
sigaltstack(NULL, {ss_sp=0x7ecf37f000, ss_flags=0, ss_size=32768}) = 0
mmap(NULL, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece00f000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece00f000, 65536, "SetAlternateSignalStack") = 0
sigaltstack({ss_sp=0x7ece00f000, ss_flags=0, ss_size=65536}, NULL) = 0
rt_sigaction(SIGSEGV, {sa_handler=0x7ec799fbb4, sa_mask=[], sa_flags=SA_ONSTACK|SA_NODEFER|SA_SIGINFO}, NULL, 8) = 0
rt_sigaction(SIGBUS, {sa_handler=0x7ec799fbb4, sa_mask=[], sa_flags=SA_ONSTACK|SA_NODEFER|SA_SIGINFO}, NULL, 8) = 0
rt_sigaction(SIGFPE, {sa_handler=0x7ec799fbb4, sa_mask=[], sa_flags=SA_ONSTACK|SA_NODEFER|SA_SIGINFO}, NULL, 8) = 0
mmap(NULL, 137439023104, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x5ec7545000
mmap(0x7ec7550000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ec7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ec7550000, 4096, "SizeClassAllocator: region info") = 0
mmap(NULL, 8388608, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x5ec6d45000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecf388000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecf388000, 4096, "atexit handlers") = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mmap(NULL, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece19c000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece19c000, 20480, "Create") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1b4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1b4000, 4096, "Allocate") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece19b000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece19b000, 4096, "InternalMmapVector") = 0
getpid()                                = 5898
getrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece19a000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece19a000, 4096, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "ffffff000-1200000000 rw-p 000000"..., 4096) = 4062
read(3, "7ecdf93000-7ecdf94000 rw-p 0000f"..., 34) = 34
close(3)                                = 0
munmap(0x7ece19a000, 4096)              = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece199000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece199000, 8192, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "ffffff000-1200000000 rw-p 000000"..., 8192) = 4062
read(3, "7ecdf93000-7ecdf94000 rw-p 0000f"..., 4130) = 3997
read(3, "7ecf37f000-7ecf387000 rw-p 00000"..., 133) = 133
close(3)                                = 0
munmap(0x7ece199000, 8192)              = 0
mmap(NULL, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece197000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece197000, 16384, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "ffffff000-1200000000 rw-p 000000"..., 16384) = 4062
read(3, "7ecdf93000-7ecdf94000 rw-p 0000f"..., 12322) = 3997
read(3, "7ecf37f000-7ecf387000 rw-p 00000"..., 8325) = 1333
read(3, "", 6992)                       = 0
close(3)                                = 0
munmap(0x7ece1a1000, 16384)             = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "ffffff000-1200000000 rw-p 000000"..., 4096) = 4062
read(3, "7ecdf93000-7ecdf94000 rw-p 0000f"..., 34) = 34
close(3)                                = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a3000, 8192, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "ffffff000-1200000000 rw-p 000000"..., 8192) = 4062
read(3, "7ecdf93000-7ecdf94000 rw-p 0000f"..., 4130) = 3997
read(3, "7ecf37f000-7ecf387000 rw-p 00000"..., 133) = 133
close(3)                                = 0
munmap(0x7ece1a3000, 8192)              = 0
mmap(NULL, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a1000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a1000, 16384, "ReadFileToBuffer") = 0
openat(AT_FDCWD, "/proc/self/maps", O_RDONLY) = 3
read(3, "ffffff000-1200000000 rw-p 000000"..., 16384) = 4062
read(3, "7ecdf93000-7ecdf94000 rw-p 0000f"..., 12322) = 3997
read(3, "7ecf37f000-7ecf387000 rw-p 00000"..., 8325) = 1333
read(3, "", 6992)                       = 0
close(3)                                = 0
munmap(0x7ece1a1000, 16384)             = 0
mmap(0x1ffe843000, 1044480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x1ffe843000
madvise(0x1ffe843000, 1044480, MADV_NOHUGEPAGE) = -1 EINVAL (Invalid argument)
madvise(0x1ffe843000, 1044480, MADV_DONTDUMP) = 0
sigaltstack(NULL, {ss_sp=0x7ece00f000, ss_flags=0, ss_size=65536}) = 0
mmap(NULL, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecdfff000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecdfff000, 65536, "SetAlternateSignalStack") = 0
sigaltstack({ss_sp=0x7ecdfff000, ss_flags=0, ss_size=65536}, NULL) = 0
mmap(NULL, 1703936, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6ba5000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6ba5000, 1703936, "InternalMmapVector") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec69a5000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec69a5000, 2097152, "SizeClassAllocator") = 0
munmap(0x5ec69a5000, 372736)            = 0
munmap(0x5ec6b00000, 675840)            = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a3000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a3000, 4096, "TwoLevelMap") = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6800000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6800000, 2097152, "SizeClassAllocator") = 0
munmap(0x5ec6900000, 1048576)           = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6600000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6600000, 2097152, "SizeClassAllocator") = 0
munmap(0x5ec6700000, 1048576)           = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6400000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6400000, 2097152, "SizeClassAllocator") = 0
munmap(0x5ec6500000, 1048576)           = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6200000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6200000, 2097152, "SizeClassAllocator") = 0
munmap(0x5ec6300000, 1048576)           = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6000000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6000000, 2097152, "SizeClassAllocator") = 0
munmap(0x5ec6100000, 1048576)           = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
munmap(0x7ece1a4000, 4096)              = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
newfstatat(AT_FDCWD, "llvm-symbolizer", 0x7ff4a0f6a0, 0) = -1 ENOENT (No such file or directory)
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 4096, "InternalMmapVector") = 0
newfstatat(AT_FDCWD, "/data/data/com.termux/files/usr/bin/llvm-symbolizer", {st_mode=S_IFREG|0700, st_size=72864, ...}, 0) = 0
munmap(0x7ece1a4000, 4096)              = 0
mmap(NULL, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece188000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece188000, 20480, "Allocate") = 0
mmap(NULL, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece021000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece021000, 20480, "Allocate") = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a1000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a1000, 8192, "InternalMmapVector") = 0
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
faccessat(AT_FDCWD, "/dev/urandom", R_OK) = 0
getrandom("\xda\x7e\x90\xca\xce\xe8\x9b\x87\xbc\x92\xf7\x98\xa0\x5a\x56\x79\xf6\xf5\x2d\x36\xae\x65\x5f\xc6\xbf\x5c\x8c\x47\xed\x35\xfe\xc6"..., 40, GRND_NONBLOCK) = 40
mmap(NULL, 1104, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece1a4000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece1a4000, 1104, "arc4random data") = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ) = 0
newfstatat(AT_FDCWD, "/dev/__properties__", {st_mode=S_IFDIR|0711, st_size=9560, ...}, 0) = 0
faccessat(AT_FDCWD, "/dev/__properties__/property_info", R_OK) = 0
openat(AT_FDCWD, "/dev/__properties__/property_info", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=119788, ...}) = 0
mmap(NULL, 119788, PROT_READ, MAP_SHARED, 3, 0) = 0x7ecdfc2000
close(3)                                = 0
mmap(NULL, 18960, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ecdffa000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ecdffa000, 18960, "System property context nodes") = 0
openat(AT_FDCWD, "/dev/__properties__/properties_serial", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ecb087000
close(3)                                = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:debug_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ecb057000
close(3)                                = 0
rt_sigaction(SIGRT_7, {sa_handler=0x7ecb14926c, sa_mask=[], sa_flags=SA_RESTART}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:exported_system_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ecb027000
close(3)                                = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ) = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ|PROT_WRITE) = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:gwp_asan_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x5ec6b75000
close(3)                                = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:libc_debug_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x5ec6b45000
close(3)                                = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:heapprofd_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x5ec6b15000
close(3)                                = 0
mprotect(0x7ecb3d3000, 4096, PROT_READ) = 0
rt_sigaction(SIGRT_4, {sa_handler=0x7ecb10132c, sa_mask=[], sa_flags=SA_RESTART|SA_SIGINFO}, NULL, 8) = 0
rt_sigaction(SIGRT_6, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTART}, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=0}, 8) = 0
mmap(0x60c7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x60c7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x60c7550000, 65536, "SizeClassAllocator: region data") = 0
mmap(0x61a7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x61a7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x61a7550000, 65536, "SizeClassAllocator: freearray") = 0
mmap(NULL, 1048576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6900000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec6900000, 1048576, "TwoLevelMap") = 0
mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x5ec5800000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5ec5800000, 8388608, "StackStore") = 0
getuid()                                = 10415
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
openat(AT_FDCWD, "/system/lib64/libnetd_client.so", O_RDONLY|O_CLOEXEC) = 3
readlinkat(AT_FDCWD, "/proc/self/fd/3", "/system/lib64/libnetd_client.so", 4096) = 31
fstat(3, {st_mode=S_IFREG|0644, st_size=36768, ...}) = 0
fstatfs(3, {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=1678691, f_bfree=6793, f_bavail=6793, f_files=7488, f_ffree=994, f_fsid={val=[0x25957ce9, 0xcc9ffedf]}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RDONLY|ST_RELATIME}) = 0
pread64(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 64, 0) = 64
mmap(NULL, 800, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7ece196000
mmap(NULL, 6336, PROT_READ, MAP_PRIVATE, 3, 0x8000) = 0x7ece194000
mmap(NULL, 576, PROT_READ, MAP_PRIVATE, 3, 0x8000) = 0x7ece193000
mmap(NULL, 7768, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7ece190000
mmap(NULL, 520192, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5ec6781000
munmap(0x5ec6781000, 421888)            = 0
munmap(0x5ec67f2000, 57344)             = 0
mmap(0x5ec67e8000, 9348, PROT_READ, MAP_PRIVATE|MAP_FIXED, 3, 0) = 0x5ec67e8000
mmap(0x5ec67eb000, 16392, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 3, 0x3000) = 0x5ec67eb000
mmap(0x5ec67f0000, 952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 3, 0x8000) = 0x5ec67f0000
mmap(0x5ec67f1000, 953, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED, 3, 0x8000) = 0x5ec67f1000
mprotect(0x5ec67f0000, 4096, PROT_READ) = 0
mmap(NULL, 2147483648, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x5e45800000
mprotect(0x7ecdfe4000, 4096, PROT_READ) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45abd000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45abd000) = 0x5e45abd000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45bf6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45bf6000) = 0x5e45bf6000
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece186000
mprotect(0x5e45af6000, 4096, PROT_READ) = 0
mprotect(0x7ece186000, 4096, PROT_READ) = 0
mremap(0x7ece186000, 4096, 4096, MREMAP_MAYMOVE|MREMAP_FIXED, 0x5e45af6000) = 0x5e45af6000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5e45800000, 2147483648, "cfi shadow") = 0
close(3)                                = 0
munmap(0x7ece190000, 7768)              = 0
munmap(0x7ece193000, 576)               = 0
munmap(0x7ece194000, 6336)              = 0
munmap(0x7ece196000, 800)               = 0
mmap(0x5fc7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x5fc7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5fc7550000, 65536, "SizeClassAllocator: region data") = 0
mmap(0x60a7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x60a7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x60a7550000, 65536, "SizeClassAllocator: freearray") = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
openat(AT_FDCWD, "/dev/__properties__/u:object_r:build_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x5ec67b8000
close(3)                                = 0
munmap(0x7ece026000, 409600)            = 0
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
openat(AT_FDCWD, "/dev/__properties__/u:object_r:vendor_socket_hook_prop:s0", O_RDONLY|O_NOFOLLOW|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0444, st_size=196608, ...}) = 0
mmap(NULL, 196608, PROT_READ, MAP_SHARED, 3, 0) = 0x7ece05a000
close(3)                                = 0
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
futex(0x7ecb3d1d00, FUTEX_WAKE_PRIVATE, 2147483647) = 0
openat(AT_FDCWD, "/sys/kernel/mm/transparent_hugepage/enabled", O_RDONLY) = -1 ENOENT (No such file or directory)
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5e45600000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5e45600000, 2097152, "libc_malloc") = 0
mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5e45400000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5e45400000, 2097152, "libc_malloc") = 0
mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5e45000000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5e45000000, 4194304, "libc_malloc") = 0
madvise(0x5e45405000, 4096, MADV_DONTNEED) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece196000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece196000, 4096, "Allocate") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece195000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece195000, 4096, "InternalMmapVector") = 0
mprotect(0x7ece1f5000, 409600, PROT_READ) = 0
mprotect(0x7ece316000, 409600, PROT_READ) = 0
mprotect(0x7ece0ee000, 409600, PROT_READ) = 0
mprotect(0x7ece08a000, 409600, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
pipe2([3, 4], 0)                        = 0
fcntl(3, F_GETFL)                       = 0 (flags O_RDONLY)
mmap(0x73c7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x73c7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x73c7550000, 65536, "SizeClassAllocator: region data") = 0
mmap(0x74a7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x74a7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x74a7550000, 65536, "SizeClassAllocator: freearray") = 0
fcntl(4, F_GETFL)                       = 0x1 (flags O_WRONLY)
fstat(4, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0
mmap(0x75c7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x75c7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x75c7550000, 65536, "SizeClassAllocator: region data") = 0
mmap(0x76a7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x76a7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x76a7550000, 65536, "SizeClassAllocator: freearray") = 0
write(4, "5aboba\n", 7)                 = 7
close(4)                                = 0
mmap(0x76c7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x76c7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x76c7550000, 65536, "SizeClassAllocator: region data") = 0
mmap(0x77a7550000, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x77a7550000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x77a7550000, 65536, "SizeClassAllocator: freearray") = 0
read(3, "5", 1)                         = 1
read(3, "a", 1)                         = 1
fstat(1, {st_mode=S_IFREG|0600, st_size=107560, ...}) = 0
read(3, "b", 1)                         = 1
read(3, "o", 1)                         = 1
read(3, "b", 1)                         = 1
read(3, "a", 1)                         = 1
read(3, "\n", 1)                        = 1
close(3)                                = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
write(1, "5\naboba\n", 85
aboba
)               = 8
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
mprotect(0x7ecf388000, 4096, PROT_READ|PROT_WRITE) = 0
mprotect(0x7ecf388000, 4096, PROT_READ) = 0
gettid()                                = 5898
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
getpid()                                = 5898
mmap(NULL, 2101248, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x5e44dff000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x5e44dff000, 2101248, "ScopedStackWithGuard") = 0
mprotect(0x5e44dff000, 4096, PROT_NONE) = 0
rt_sigprocmask(SIG_BLOCK, ~[ILL ABRT BUS FPE SEGV XCPU XFSZ], [RTMIN], 8) = 0
clone(child_stack=0x5e44fffff0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_UNTRACED) = 5919
rt_sigprocmask(SIG_SETMASK, [RTMIN], NULL, 8) = 0
getpid()                                = 5898
prctl(PR_SET_PTRACER, 5919)             = -1 EINVAL (Invalid argument)
futex(0x7ff4a114b8, FUTEX_WAKE_PRIVATE, 1) = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
sched_yield()                           = 0
wait4(5919, NULL, __WALL, NULL)         = 5919
munmap(0x5e44dff000, 2101248)           = 0
getpid()                                = 5898
write(2, "==5898==LeakSanitizer has encoun"..., 53==5898==LeakSanitizer has encountered a fatal error.
) = 53
mmap(NULL, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece04a000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece04a000, 65536, "AppendToErrorMessageBuffer") = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece194000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece194000, 4096, "InternalMmapVector") = 0
socket(AF_UNIX, SOCK_DGRAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3
connect(3, {sa_family=AF_UNIX, sun_path="/dev/socket/logdw"}, 110) = 0
writev(3, [{iov_base="\0", iov_len=1}, {iov_base="\n\27", iov_len=2}, {iov_base="\271\340je\327\221\7(", iov_len=8}, {iov_base="\4", iov_len=1}, {iov_base="fdtest\0", iov_len=7}, {iov_base="==5898==LeakSanitizer has encoun"..., iov_len=53}], 6) = 72
close(3)                                = 0
munmap(0x7ece194000, 4096)              = 0
getpid()                                = 5898
write(2, "==5898==HINT: For debugging, try"..., 101==5898==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
) = 101
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece194000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece194000, 4096, "InternalMmapVector") = 0
socket(AF_UNIX, SOCK_DGRAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3
connect(3, {sa_family=AF_UNIX, sun_path="/dev/socket/logdw"}, 110) = 0
writev(3, [{iov_base="\0", iov_len=1}, {iov_base="\n\27", iov_len=2}, {iov_base="\271\340je?\345\16(", iov_len=8}, {iov_base="\4", iov_len=1}, {iov_base="fdtest\0", iov_len=7}, {iov_base="==5898==HINT: For debugging, try"..., iov_len=101}], 6) = 120
close(3)                                = 0
munmap(0x7ece194000, 4096)              = 0
getpid()                                = 5898
write(2, "==5898==HINT: LeakSanitizer does"..., 74==5898==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
) = 74
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ece194000
prctl(PR_SET_VMA, PR_SET_VMA_ANON_NAME, 0x7ece194000, 4096, "InternalMmapVector") = 0
socket(AF_UNIX, SOCK_DGRAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3
connect(3, {sa_family=AF_UNIX, sun_path="/dev/socket/logdw"}, 110) = 0
writev(3, [{iov_base="\0", iov_len=1}, {iov_base="\n\27", iov_len=2}, {iov_base="\271\340je\216F\304(", iov_len=8}, {iov_base="\4", iov_len=1}, {iov_base="fdtest\0", iov_len=7}, {iov_base="==5898==HINT: LeakSanitizer does"..., iov_len=74}], 6) = 93
close(3)                                = 0
munmap(0x7ece194000, 4096)              = 0
rt_sigprocmask(SIG_SETMASK, ~[ABRT RT_1 RT_2 RT_3 RT_4 RT_5 RT_6 RT_7 RT_8], NULL, 8) = 0
getpid()                                = 5898
gettid()                                = 5898
getuid()                                = 10415
rt_tgsigqueueinfo(5898, 5898, SIGABRT, {}) = 0
--- SIGABRT {si_signo=SIGABRT, si_code=SI_QUEUE, si_pid=5898, si_uid=10415} ---
getpid()                                = 5898
gettid()                                = 5898
openat(AT_FDCWD, "/proc/5898/task/5898/stat", O_RDONLY|O_NONBLOCK|O_CLOEXEC) = 3
read(3, "5898 (fdtest) R 5890 5890 20940 "..., 4096) = 313
close(3)                                = 0
rt_sigaction(SIGABRT, NULL, {sa_handler=0x7ecf3e5eb4, sa_mask=~[KILL STOP], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, 8) = 0
prctl(PR_GET_NO_NEW_PRIVS, 0, 0, 0, 0)  = 0
openat(AT_FDCWD, "/proc/self/comm", O_RDONLY|O_CLOEXEC) = 3
read(3, "fdtest\n", 17)                 = 7
close(3)                                = 0
getpid()                                = 5898
prctl(PR_GET_NAME, "fdtest")            = 0
gettid()                                = 5898
socket(AF_UNIX, SOCK_DGRAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3
connect(3, {sa_family=AF_UNIX, sun_path="/dev/socket/logdw"}, 110) = 0
writev(3, [{iov_base="\4", iov_len=1}, {iov_base="\n\27", iov_len=2}, {iov_base="\271\340je\24\224\325(", iov_len=8}, {iov_base="\7", iov_len=1}, {iov_base="libc\0", iov_len=5}, {iov_base="Fatal signal 6 (SIGABRT), code -"..., iov_len=85}], 6) = 102
close(3)                                = 0
gettid()                                = 5898
prctl(PR_GET_DUMPABLE)                  = 1 (SUID_DUMP_USER)
prctl(PR_SET_DUMPABLE, SUID_DUMP_USER)  = 0
prctl(PR_SET_PTRACER, PR_SET_PTRACER_ANY) = -1 EINVAL (Invalid argument)
clone(child_stack=0x7ece2c1fe0, flags=CLONE_VM|CLONE_SIGHAND|CLONE_THREAD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, child_tidptr=0x7ece00dbf4) = 5920
futex(0x7ece00dbf4, FUTEX_WAIT, 4294967295, NULL) = -1 EAGAIN (Try again)
futex(0x7ece00dbf4, FUTEX_WAIT, 5920, NULL) = 0
rt_sigaction(SIGABRT, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTART}, {sa_handler=0x7ecf3e5eb4, sa_mask=~[KILL STOP], sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO|0x800}, 8) = 0
getpid()                                = 5898
gettid()                                = 5898
rt_tgsigqueueinfo(5898, 5898, SIGABRT, {si_signo=SIGABRT, si_code=SI_QUEUE, si_pid=5898, si_uid=10415}) = 0
rt_sigreturn({mask=~[ABRT KILL STOP RT_1 RT_2 RT_3 RT_4 RT_5 RT_6 RT_7 RT_8]}) = 0
--- SIGABRT {si_signo=SIGABRT, si_code=SI_QUEUE, si_pid=5898, si_uid=10415} ---
+++ killed by SIGABRT +++
